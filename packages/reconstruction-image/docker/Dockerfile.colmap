# docker build -f docker/Dockerfile-colmap -t chenhsuanlin/colmap:3.8 .
# docker push chenhsuanlin/colmap:3.8

#FROM nvcr.io/nvidia/cuda:11.8.0-devel-ubuntu20.04 as build
FROM nvidia/cuda:12.2.0-devel-ubuntu22.04 as build
ARG DEBIAN_FRONTEND=noninteractive
ARG COLMAP_GIT_COMMIT=main
ENV QT_XCB_GL_INTEGRATION=xcb_egl

# colmap dependencies
RUN apt-get update && apt-get install -y \
    git \
    cmake \
    ninja-build \
    build-essential \
    libboost-program-options-dev \
    libboost-filesystem-dev \
    libboost-graph-dev \
    libboost-system-dev \
    libboost-test-dev \
    libeigen3-dev \
    libflann-dev \
    libfreeimage-dev \
    libmetis-dev \
    libgoogle-glog-dev \
    libgflags-dev \
    libsqlite3-dev \
    libglew-dev \
    qtbase5-dev \
    libqt5opengl5-dev \
    libcgal-dev \
    libceres-dev \
    pip \
    ffmpeg \   
    xvfb
# Colmap
ARG CUDA_ARCHITECTURES="86"
RUN git clone https://github.com/colmap/colmap.git && cd colmap \
git fetch https://github.com/colmap/colmap.git main   && \
git checkout main && \
mkdir build && cd build && cmake .. -GNinja -DCUDA_ENABLED=ON -DCMAKE_CUDA_ARCHITECTURES=${CUDA_ARCHITECTURES} && \
ninja && ninja install \
cd .. && rm -rf colmap


## now getting the requirements for the neuralangelo model

WORKDIR /app/
COPY ../neuralangelo_modified/requirements.txt ./neuralangelo_modified/requirements.txt

WORKDIR /app/neuralangelo_modified/

RUN pip install -r requirements.txt

## COPYing the remaining implementation of 

COPY ../neuralangelo_modified/ .


FROM build as run

COPY --from=build /app/ /app/

WORKDIR /app/neuralangelo_modified/scripts/
RUN chmod 700 ./preprocess.sh

ENTRYPOINT [ "./preprocess.sh" ]
